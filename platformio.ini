; PlatformIO Project Configuration File
;
; This file has been configured to use the ESP-IDF framework.
; NOTE: Migrating from Arduino to ESP-IDF requires rewriting your C++ code
; to use native ESP-IDF APIs instead of Arduino libraries.

[platformio]
default_envs = esp32-poe-idf

[firmware]
name = HSG-LEDController-ESP32-POE-FW
short_name = HSG LED Controller
maker = Hugh Kojack
github_url = https://github.com/hughkojack/LED-Controller

[env:esp32-poe-idf]
platform = espressif32 @ ~5.4.0
board = esp32-poe      ; <-- Use a generic board definition for ESP-IDF.
framework = espidf    ; <-- Set the framework to ESP-IDF.

monitor_speed = 115200

build_flags = 
    -DFW_NAME='"${firmware.name}"'
    -DFW_SHORT_NAME='"${firmware.short_name}"'
    -DFW_MAKER='"${firmware.maker}"'
    -DFW_GITHUB_URL='"${firmware.github_url}"'
    -D CONFIG_ETH_USE_ESP32_EMAC=1
    -D CONFIG_ETH_PHY_LAN8720=1
    -D CONFIG_ETH_PHY_ADDR=0
    -D CONFIG_ETH_MDC_GPIO=23
    -D CONFIG_ETH_MDIO_GPIO=18
    -D CONFIG_ETH_PHY_POWER_PIN=-1

; All Arduino-specific libraries have been removed.
; You will need to use the native ESP-IDF components for I2C, MQTT, CAN (TWAI), etc.
; Libraries compatible with ESP-IDF can be added here or managed via idf_component.yml.
lib_deps =
    
; The build flags for Ethernet configuration have been removed.
; To configure the Ethernet PHY pins and other hardware settings, you must now run:
; pio run -t menuconfig
; Then navigate to: Component config -> Ethernet

